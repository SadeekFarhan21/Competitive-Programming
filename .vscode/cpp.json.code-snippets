{
	// Place your Competitive Programming workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"1": {
		"prefix": "cpp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define int long long int",
			"",
			"int32_t main(){",
			"    return 0;",
			"}"
		],
		"description": ""
	},
	"2": {
		"prefix": "testcase",
		"body": [
			"int32_t main(){",
			"    int t; cin >> t;",
			"    for(int i = 0; i < t; i++){",
			"        solve();",
			"    }",
			"    return 0;",
			"}"
		],
		"description": ""
	},
	"3": {
		"prefix": "solve",
		"body": [
			"void solve(){",
			"     ",
			"}"
		],
		"description": ""
	},
	"4": {
		"prefix": "bits",
		"body": [
			"#include <bits/stdc++.h>"
		],
		"description": ""
	},
}